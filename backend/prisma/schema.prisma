generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  avatarUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  vehicles  Vehicle[]
  documents Document[]
  expenses  Expense[]
}

model Vehicle {
  id               String   @id @default(uuid())
  userId           String
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  brand            String
  model            String?
  year             Int?
  plate            String?
  color            String?
  fuelType         String?
  chassisNumber    String?
  engineNumber     String?
  roadTaxExpiry    DateTime?
  insuranceExpiry  DateTime?
  lastServiceDate  DateTime?
  nextServiceDate  DateTime?
  currentMileage   Int       @default(0)

  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  documents        Document[]
  expenses         Expense[]
}

enum DocType {
  License
  Insurance
  RoadTax
  RegistrationCard
  ServiceInvoice
  Others
}

model Document {
  id            String   @id @default(uuid())
  userId        String
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  vehicleId     String?
  vehicle       Vehicle? @relation(fields: [vehicleId], references: [id])

  type          DocType?
  name          String
  expiryDate    DateTime?
  uploadedAt    DateTime  @default(now())
  size          Int       @default(0)
  contentBase64 String?   // demo用，生产建议存云存储地址
  extractedText String?

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

enum ExpenseCategory {
  Fuel
  Maintenance
  Insurance
  RoadTax
  Toll_Parking
  Other
}

model Expense {
  id            String   @id @default(uuid())
  userId        String
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  vehicleId     String
  vehicle       Vehicle  @relation(fields: [vehicleId], references: [id])

  title         String
  category      ExpenseCategory
  amount        Decimal  @db.Decimal(12,2)
  date          DateTime
  description   String?
  receiptBase64 String?

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}